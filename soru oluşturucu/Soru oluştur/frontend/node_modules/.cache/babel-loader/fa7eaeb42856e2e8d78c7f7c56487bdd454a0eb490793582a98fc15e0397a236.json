{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\technopc\\\\Desktop\\\\dosyalar\\\\tiski3\\\\tiskiiii\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { OpenAI } from 'openai';\nimport axios from 'axios';\nimport { createRoot } from 'react-dom'; // createRoot'u doğru içe aktar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [generatedQuestion, setGeneratedQuestion] = useState('');\n  const apiKey = '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';\n  const api = new OpenAI({\n    apiKey,\n    dangerouslyAllowBrowser: true\n  });\n  const createAndSendQuestion = async () => {\n    const soru = 'Bana 1 adet soru üret. sorunun konuları tarih, coğrafya, bilim, mantık matematik ve futbol ile alakalı olsun.soruları olabildiğince zor sor. temel sorular olmasın.zorluk seviyesini belirtirken 1 ila 5 arasında belirt bu şekilde yazmanı isitiyorum senden soruyu iki düz çizgi arasına yaz  |Soru| |Doğru cevap| |Yanlış cevap 1|  |Yanlış cevap 2|  |Yanlış cevap 3| |Tür| |Zorluk seviyesi| örnek verecek olursam |2+2 kaç eder| | 4 | | 5| |7| | 10|  | matematik | | 1|';\n    try {\n      const completion = await api.createCompletion({\n        prompt: soru,\n        model: 'gpt-3.5-turbo'\n      });\n      const aiResponse = completion.choices[0].text;\n      console.log(`AI: ${aiResponse}`);\n      const veriler = aiResponse.split('|');\n      const a = veriler[1];\n      const dogru_cevap = veriler[3];\n      const yanlis_cevap_1 = veriler[5];\n      const yanlis_cevap_2 = veriler[7];\n      const yanlis_cevap_3 = veriler[9];\n      const tur = veriler[11];\n      const zorlukSeviyesi = veriler[13];\n      console.log(a);\n      console.log(dogru_cevap);\n      console.log(yanlis_cevap_1);\n      console.log(yanlis_cevap_2);\n      console.log(yanlis_cevap_3);\n      console.log(tur);\n      console.log(zorlukSeviyesi);\n      const formData = new FormData();\n      formData.append('soru', a);\n      formData.append('dogru_cevap', dogru_cevap);\n      formData.append('yanlis_cevap1', yanlis_cevap_1);\n      formData.append('yanlis_cevap2', yanlis_cevap_2);\n      formData.append('yanlis_cevap3', yanlis_cevap_3);\n      formData.append('tur', tur);\n      formData.append('zorluk_seviyesi', zorlukSeviyesi);\n      const response1 = await axios.post('http://localhost:5000/create_question', formData);\n      console.log(response1.data);\n      return aiResponse; // Oluşturulan soruyu döndür\n    } catch (error) {\n      console.error('Hata oluştu:', error);\n      return ''; // Hata durumunda boş bir yanıt döndür\n    }\n  };\n\n  useEffect(() => {\n    // createAndSendQuestion işlemini bir kez çağırmak için bir yardımcı işlev kullanın\n    const fetchData = async () => {\n      const generatedQuestion = await createAndSendQuestion();\n\n      // Oluşturulan soruyu kullanıcı arayüzünde gösterin\n      setGeneratedQuestion(generatedQuestion);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soru Olu\\u015Fturma Uygulamas\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createAndSendQuestion,\n      children: \"Soru Olu\\u015Ftur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), generatedQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Olu\\u015Fturulan Soru:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: generatedQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cPAcBmpwYFCvdB6d7e9ltbNkQeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","OpenAI","axios","createRoot","jsxDEV","_jsxDEV","App","_s","generatedQuestion","setGeneratedQuestion","apiKey","api","dangerouslyAllowBrowser","createAndSendQuestion","soru","completion","createCompletion","prompt","model","aiResponse","choices","text","console","log","veriler","split","a","dogru_cevap","yanlis_cevap_1","yanlis_cevap_2","yanlis_cevap_3","tur","zorlukSeviyesi","formData","FormData","append","response1","post","data","error","fetchData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/technopc/Desktop/dosyalar/tiski3/tiskiiii/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { OpenAI } from 'openai';\r\nimport axios from 'axios';\r\nimport { createRoot } from 'react-dom'; // createRoot'u doğru içe aktar\r\n\r\nfunction App() {\r\n  const [generatedQuestion, setGeneratedQuestion] = useState('');\r\n  const apiKey = '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';\r\n\r\n  const api = new OpenAI({\r\n    apiKey,\r\n    dangerouslyAllowBrowser: true,\r\n  });\r\n\r\n  const createAndSendQuestion = async () => {\r\n    const soru =\r\n      'Bana 1 adet soru üret. sorunun konuları tarih, coğrafya, bilim, mantık matematik ve futbol ile alakalı olsun.soruları olabildiğince zor sor. temel sorular olmasın.zorluk seviyesini belirtirken 1 ila 5 arasında belirt bu şekilde yazmanı isitiyorum senden soruyu iki düz çizgi arasına yaz  |Soru| |Doğru cevap| |Yanlış cevap 1|  |Yanlış cevap 2|  |Yanlış cevap 3| |Tür| |Zorluk seviyesi| örnek verecek olursam |2+2 kaç eder| | 4 | | 5| |7| | 10|  | matematik | | 1|';\r\n\r\n    try {\r\n      const completion = await api.createCompletion({\r\n        prompt: soru,\r\n        model: 'gpt-3.5-turbo',\r\n      });\r\n\r\n      const aiResponse = completion.choices[0].text;\r\n      console.log(`AI: ${aiResponse}`);\r\n      const veriler = aiResponse.split('|');\r\n\r\n      const a = veriler[1];\r\n      const dogru_cevap = veriler[3];\r\n      const yanlis_cevap_1 = veriler[5];\r\n      const yanlis_cevap_2 = veriler[7];\r\n      const yanlis_cevap_3 = veriler[9];\r\n      const tur = veriler[11];\r\n      const zorlukSeviyesi = veriler[13];\r\n\r\n      console.log(a);\r\n      console.log(dogru_cevap);\r\n      console.log(yanlis_cevap_1);\r\n      console.log(yanlis_cevap_2);\r\n      console.log(yanlis_cevap_3);\r\n      console.log(tur);\r\n      console.log(zorlukSeviyesi);\r\n\r\n      const formData = new FormData();\r\n\r\n      formData.append('soru', a);\r\n      formData.append('dogru_cevap', dogru_cevap);\r\n      formData.append('yanlis_cevap1', yanlis_cevap_1);\r\n      formData.append('yanlis_cevap2', yanlis_cevap_2);\r\n      formData.append('yanlis_cevap3', yanlis_cevap_3);\r\n      formData.append('tur', tur);\r\n      formData.append('zorluk_seviyesi', zorlukSeviyesi);\r\n\r\n      const response1 = await axios.post('http://localhost:5000/create_question', formData);\r\n\r\n      console.log(response1.data);\r\n\r\n      return aiResponse; // Oluşturulan soruyu döndür\r\n\r\n    } catch (error) {\r\n      console.error('Hata oluştu:', error);\r\n      return ''; // Hata durumunda boş bir yanıt döndür\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // createAndSendQuestion işlemini bir kez çağırmak için bir yardımcı işlev kullanın\r\n    const fetchData = async () => {\r\n      const generatedQuestion = await createAndSendQuestion();\r\n\r\n      // Oluşturulan soruyu kullanıcı arayüzünde gösterin\r\n      setGeneratedQuestion(generatedQuestion);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Soru Oluşturma Uygulaması</h1>\r\n      <button onClick={createAndSendQuestion}>Soru Oluştur</button>\r\n      {generatedQuestion && (\r\n        <div>\r\n          <h2>Oluşturulan Soru:</h2>\r\n          <p>{generatedQuestion}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}