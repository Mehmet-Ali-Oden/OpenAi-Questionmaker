{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questionText, setQuestionText] = useState('');\n  const [questionType, setQuestionType] = useState('');\n  const [difficulty, setDifficulty] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const createQuestion = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/create_question', {\n        text: questionText,\n        type: questionType,\n        difficulty: difficulty\n      });\n      console.log(response.data);\n\n      // Başarılı mesajları işleyebilirsiniz\n    } catch (error) {\n      console.error('Hata oluştu:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"J6O6b9xIPCCxyPkKVV9vxep1OH0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","questionText","setQuestionText","questionType","setQuestionType","difficulty","setDifficulty","isLoading","setIsLoading","createQuestion","response","post","text","type","console","log","data","error","_c","$RefreshReg$"],"sources":["C:/Users/technopc/Desktop/dosyalar/tiski3/tiskiiii/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [questionText, setQuestionText] = useState('');\r\n  const [questionType, setQuestionType] = useState('');\r\n  const [difficulty, setDifficulty] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const createQuestion = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/create_question', {\r\n        text: questionText,\r\n        type: questionType,\r\n        difficulty: difficulty,\r\n       \r\n\r\n      \r\n      \r\n      });\r\n\r\n      console.log(response.data);\r\n\r\n      // Başarılı mesajları işleyebilirsiniz\r\n    } catch (error) {\r\n      console.error('Hata oluştu:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n   <>\r\n   \r\n   \r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,uCAAuC,EAAE;QACzEC,IAAI,EAAEX,YAAY;QAClBY,IAAI,EAAEV,YAAY;QAClBE,UAAU,EAAEA;MAKd,CAAC,CAAC;MAEFS,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAAC;;MAE1B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,SAAS;MACRT,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACCV,OAAA,CAAAF,SAAA,mBAGE,CAAC;AAEN;AAACI,EAAA,CAnCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}