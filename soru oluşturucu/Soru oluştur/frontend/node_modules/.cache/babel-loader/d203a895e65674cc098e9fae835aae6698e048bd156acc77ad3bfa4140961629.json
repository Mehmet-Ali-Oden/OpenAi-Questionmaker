{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\technopc\\\\Desktop\\\\dosyalar\\\\tiski3\\\\tiskiiii\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { OpenAI } from 'openai';\nimport axios from 'axios';\nimport { createRoot } from 'react-dom/client'; // createRoot'u doğru şekilde içe aktarın\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [generatedQuestion, setGeneratedQuestion] = useState('');\n  const apiKey = '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';\n  const a = null;\n  const dogru_cevap = null;\n  const yanlis_cevap_1 = null;\n  const yanlis_cevap_2 = null;\n  const yanlis_cevap_3 = null;\n  const tur = null;\n  const zorlukSeviyesi = null;\n  const api = new OpenAI({\n    apiKey,\n    dangerouslyAllowBrowser: true\n  });\n  const createAndSendQuestion = async () => {\n    const soru = 'Bana sadece  1 adet soru üret. sorunun konuları tarih, coğrafya, bilim, mantık matematik ve futbol ile alakalı olsun.soruları olabildiğince zor sor. temel sorular olmasın.zorluk seviyesini belirtirken bilinirliğe göre 1 ila 5 arasında puanla bu şekilde yazmanı isitiyorum senden soruyu iki düz çizgi arasına yaz  |Soru| |Doğru cevap| |Yanlış cevap 1|  |Yanlış cevap 2|  |Yanlış cevap 3| |Tür| |Zorluk seviyesi| örnek verecek olursam |Kösedağ savaşaı hangi iki devlet arasında olmuştur| | Anadolu SELÇUKLU-MOĞOL| |GAZNELİ-SELÇUKLU| |Azerbaycan -ermenistan| |nijerya-bangladeş|  |tARİH | |2|';\n    try {\n      const completion = await api.chat.completions.create({\n        messages: [{\n          role: 'system',\n          content: soru\n        }, {\n          role: 'user',\n          content: ''\n        }],\n        model: 'gpt-3.5-turbo'\n      });\n      const aiResponse = completion.choices[0].message.content;\n      console.log(`AI: ${aiResponse}`);\n      const veriler = aiResponse.split('|');\n      a = veriler[1];\n      dogru_cevap = veriler[3];\n      yanlis_cevap_1 = veriler[5];\n      yanlis_cevap_2 = veriler[7];\n      yanlis_cevap_3 = veriler[9];\n      tur = veriler[11];\n      zorlukSeviyesi = veriler[13];\n      console.log(response1.data);\n      return aiResponse; // Oluşturulan soruyu döndür\n    } catch (error) {\n      console.error('Hata oluştu:', error);\n      return ''; // Hata durumunda boş bir yanıt döndür\n    }\n  };\n\n  const sorugonder = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('soru', a);\n      formData.append('dogru_cevap', dogru_cevap);\n      formData.append('yanlis_cevap1', yanlis_cevap_1);\n      formData.append('yanlis_cevap2', yanlis_cevap_2);\n      formData.append('yanlis_cevap3', yanlis_cevap_3);\n      formData.append('tur', tur);\n      formData.append('zorluk_seviyesi', zorlukSeviyesi);\n      const response1 = await axios.post('http://localhost:5000/create_question', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Hata oluştu:', error);\n      return ''; // Hata durumunda boş bir yanıt döndür\n    }\n  };\n\n  useEffect(() => {\n    // createAndSendQuestion işlemini bir kez çağırmak için bir yardımcı işlev kullanın\n    const fetchData = async () => {\n      const generatedQuestion = await createAndSendQuestion();\n\n      // Oluşturulan soruyu kullanıcı arayüzünde gösterin\n      setGeneratedQuestion(generatedQuestion);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soru Olu\\u015Fturma Uygulamas\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sorugonder,\n      children: \"Soru Olu\\u015Ftur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createAndSendQuestion,\n      children: \"ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n// React uygulamanızı oluşturmak için createRoot'u kullanın\n_s(App, \"cPAcBmpwYFCvdB6d7e9ltbNkQeU=\");\n_c = App;\nconst root = createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 118,\n  columnNumber: 3\n}, this));\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","OpenAI","axios","createRoot","jsxDEV","_jsxDEV","App","_s","generatedQuestion","setGeneratedQuestion","apiKey","a","dogru_cevap","yanlis_cevap_1","yanlis_cevap_2","yanlis_cevap_3","tur","zorlukSeviyesi","api","dangerouslyAllowBrowser","createAndSendQuestion","soru","completion","chat","completions","create","messages","role","content","model","aiResponse","choices","message","console","log","veriler","split","response1","data","error","sorugonder","formData","FormData","append","post","headers","fetchData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","root","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["C:/Users/technopc/Desktop/dosyalar/tiski3/tiskiiii/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { OpenAI } from 'openai';\r\nimport axios from 'axios';\r\nimport { createRoot } from 'react-dom/client'; // createRoot'u doğru şekilde içe aktarın\r\n\r\nfunction App() {\r\n  const [generatedQuestion, setGeneratedQuestion] = useState('');\r\n  const apiKey = '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';\r\n  const a=null ;\r\n  const dogru_cevap=null;\r\n  const yanlis_cevap_1 =null;\r\n  const yanlis_cevap_2 = null;\r\n  const yanlis_cevap_3 = null;\r\n  const tur = null;\r\n  const zorlukSeviyesi= null;\r\n  const api = new OpenAI({\r\n    apiKey,\r\n    dangerouslyAllowBrowser: true,\r\n  });\r\n\r\n  const createAndSendQuestion = async () => {\r\n    const soru =\r\n      'Bana sadece  1 adet soru üret. sorunun konuları tarih, coğrafya, bilim, mantık matematik ve futbol ile alakalı olsun.soruları olabildiğince zor sor. temel sorular olmasın.zorluk seviyesini belirtirken bilinirliğe göre 1 ila 5 arasında puanla bu şekilde yazmanı isitiyorum senden soruyu iki düz çizgi arasına yaz  |Soru| |Doğru cevap| |Yanlış cevap 1|  |Yanlış cevap 2|  |Yanlış cevap 3| |Tür| |Zorluk seviyesi| örnek verecek olursam |Kösedağ savaşaı hangi iki devlet arasında olmuştur| | Anadolu SELÇUKLU-MOĞOL| |GAZNELİ-SELÇUKLU| |Azerbaycan -ermenistan| |nijerya-bangladeş|  |tARİH | |2|';\r\n\r\n    try {\r\n      const completion = await api.chat.completions.create({\r\n        messages: [{ role: 'system', content: soru }, { role: 'user', content: '' }],\r\n        model: 'gpt-3.5-turbo'\r\n      });\r\n\r\n      const aiResponse = completion.choices[0].message.content;\r\n      console.log(`AI: ${aiResponse}`);\r\n      const veriler = aiResponse.split('|');\r\n\r\n       a = veriler[1];\r\n       dogru_cevap = veriler[3];\r\n       yanlis_cevap_1 = veriler[5];\r\n       yanlis_cevap_2 = veriler[7];\r\n      yanlis_cevap_3 = veriler[9];\r\n       tur = veriler[11];\r\n       zorlukSeviyesi = veriler[13];\r\n\r\n      console.log(response1.data);\r\n\r\n      return aiResponse; // Oluşturulan soruyu döndür\r\n\r\n    } catch (error) {\r\n      console.error('Hata oluştu:', error);\r\n      return ''; // Hata durumunda boş bir yanıt döndür\r\n    }\r\n  };\r\n\r\n  const sorugonder= async()=>{\r\n\r\ntry   {\r\n\r\n  const formData = new FormData();\r\n\r\n  formData.append('soru', a);\r\n  formData.append('dogru_cevap', dogru_cevap);\r\n  formData.append('yanlis_cevap1', yanlis_cevap_1);\r\n  formData.append('yanlis_cevap2', yanlis_cevap_2);\r\n  formData.append('yanlis_cevap3', yanlis_cevap_3);\r\n  formData.append('tur', tur);\r\n  formData.append('zorluk_seviyesi', zorlukSeviyesi);\r\n\r\n  const response1 = await axios.post('http://localhost:5000/create_question', formData, {\r\nheaders: {\r\n'Content-Type': 'application/json',\r\n},\r\n});\r\n\r\n}\r\ncatch(error)\r\n{\r\n  console.error('Hata oluştu:', error);\r\n  return ''; // Hata durumunda boş bir yanıt döndür\r\n}\r\n \r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // createAndSendQuestion işlemini bir kez çağırmak için bir yardımcı işlev kullanın\r\n    const fetchData = async () => {\r\n      const generatedQuestion = await createAndSendQuestion();\r\n\r\n      // Oluşturulan soruyu kullanıcı arayüzünde gösterin\r\n      setGeneratedQuestion(generatedQuestion);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Soru Oluşturma Uygulaması</h1>\r\n      \r\n     \r\n      <button onClick={sorugonder}>Soru Oluştur</button>\r\n      <button onClick={createAndSendQuestion}>ekle</button>\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\n// React uygulamanızı oluşturmak için createRoot'u kullanın\r\nconst root = createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}