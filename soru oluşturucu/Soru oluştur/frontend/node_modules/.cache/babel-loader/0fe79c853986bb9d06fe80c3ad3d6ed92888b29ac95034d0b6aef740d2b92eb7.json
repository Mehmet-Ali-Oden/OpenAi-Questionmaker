{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\technopc\\\\Desktop\\\\dosyalar\\\\tiski3\\\\tiskiiii\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { OpenAI } from 'openai';\nimport axios from 'axios';\nimport { createRoot } from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [generatedQuestion, setGeneratedQuestion] = useState('');\n  const [questionData, setQuestionData] = useState({\n    soru: '',\n    dogru_cevap: '',\n    yanlis_cevap1: '',\n    yanlis_cevap2: '',\n    yanlis_cevap3: '',\n    tur: '',\n    zorluk_seviyesi: ''\n  });\n  const apiKey = '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';\n  const api = new OpenAI({\n    apiKey,\n    dangerouslyAllowBrowser: true\n  });\n  const createAndSendQuestion = async () => {\n    const soru = 'Bana sadece  1 adet soru üret. sorunun konuları tarih, coğrafya, bilim, mantık matematik ve futbol ile alakalı olsun.soruları olabildiğince zor sor. temel sorular olmasın.zorluk seviyesini belirtirken bilinirliğe göre 1 ila 5 arasında puanla bu şekilde yazmanı isitiyorum senden soruyu iki düz çizgi arasına yaz  |Soru| |Doğru cevap| |Yanlış cevap 1|  |Yanlış cevap 2|  |Yanlış cevap 3| |Tür| |Zorluk seviyesi| örnek verecek olursam |Kösedağ savaşaı hangi iki devlet arasında olmuştur| | Anadolu SELÇUKLU-MOĞOL| |GAZNELİ-SELÇUKLU| |Azerbaycan -ermenistan| |nijerya-bangladeş|  |tARİH | |2|';\n    try {\n      const completion = await api.chat.completions.create({\n        messages: [{\n          role: 'system',\n          content: soru\n        }, {\n          role: 'user',\n          content: ''\n        }],\n        model: 'gpt-3.5-turbo'\n      });\n      const aiResponse = completion.choices[0].message.content;\n      console.log(`AI: ${aiResponse}`);\n      const veriler = aiResponse.split('|');\n      const a = veriler[1];\n      const dogru_cevap = veriler[3];\n      const yanlis_cevap_1 = veriler[5];\n      const yanlis_cevap_2 = veriler[7];\n      const yanlis_cevap_3 = veriler[9];\n      const tur = veriler[11];\n      const zorlukSeviyesi = veriler[13];\n      console.log(a);\n      console.log(dogru_cevap);\n      console.log(yanlis_cevap_1);\n      console.log(yanlis_cevap_2);\n      console.log(yanlis_cevap_3);\n      console.log(tur);\n      console.log(zorlukSeviyesi);\n      setGeneratedQuestion(aiResponse);\n      setQuestionData({\n        soru: a,\n        dogru_cevap: dogru_cevap,\n        yanlis_cevap1: yanlis_cevap_1,\n        yanlis_cevap2: yanlis_cevap_2,\n        yanlis_cevap3: yanlis_cevap_3,\n        tur: tur,\n        zorluk_seviyesi: zorlukSeviyesi\n      });\n    } catch (error) {\n      console.error('Hata oluştu:', error);\n      return ''; // Hata durumunda boş bir yanıt döndür\n    }\n  };\n\n  const handleNewQuestion = async () => {\n    await createAndSendQuestion();\n  };\n  const handleUpdateQuestion = async () => {\n    // Veritabanına güncelleme işlemini burada ekleyebilirsiniz\n    // questionData değişkeni güncel verileri içeriyor\n  };\n  useEffect(() => {\n    createAndSendQuestion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soru Olu\\u015Fturma Uygulamas\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNewQuestion,\n      children: \"Yeni Soru Olu\\u015Ftur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateQuestion,\n      children: \"Soruyu G\\xFCncelle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), generatedQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Olu\\u015Fturulan Soru:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: generatedQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: questionData.tur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x2lMkcrbLQAshWJPTQNe2/IzW14=\");\n_c = App;\nconst root = createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 104,\n  columnNumber: 3\n}, this));\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","OpenAI","axios","createRoot","jsxDEV","_jsxDEV","App","_s","generatedQuestion","setGeneratedQuestion","questionData","setQuestionData","soru","dogru_cevap","yanlis_cevap1","yanlis_cevap2","yanlis_cevap3","tur","zorluk_seviyesi","apiKey","api","dangerouslyAllowBrowser","createAndSendQuestion","completion","chat","completions","create","messages","role","content","model","aiResponse","choices","message","console","log","veriler","split","a","yanlis_cevap_1","yanlis_cevap_2","yanlis_cevap_3","zorlukSeviyesi","error","handleNewQuestion","handleUpdateQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","root","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["C:/Users/technopc/Desktop/dosyalar/tiski3/tiskiiii/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { OpenAI } from 'openai';\r\nimport axios from 'axios';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nfunction App() {\r\n  const [generatedQuestion, setGeneratedQuestion] = useState('');\r\n  const [questionData, setQuestionData] = useState({\r\n    soru: '',\r\n    dogru_cevap: '',\r\n    yanlis_cevap1: '',\r\n    yanlis_cevap2: '',\r\n    yanlis_cevap3: '',\r\n    tur: '',\r\n    zorluk_seviyesi: '',\r\n  });\r\n\r\n  const apiKey = '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';\r\n\r\n  const api = new OpenAI({\r\n    apiKey,\r\n    dangerouslyAllowBrowser: true,\r\n  });\r\n\r\n  const createAndSendQuestion = async () => {\r\n    const soru =\r\n      'Bana sadece  1 adet soru üret. sorunun konuları tarih, coğrafya, bilim, mantık matematik ve futbol ile alakalı olsun.soruları olabildiğince zor sor. temel sorular olmasın.zorluk seviyesini belirtirken bilinirliğe göre 1 ila 5 arasında puanla bu şekilde yazmanı isitiyorum senden soruyu iki düz çizgi arasına yaz  |Soru| |Doğru cevap| |Yanlış cevap 1|  |Yanlış cevap 2|  |Yanlış cevap 3| |Tür| |Zorluk seviyesi| örnek verecek olursam |Kösedağ savaşaı hangi iki devlet arasında olmuştur| | Anadolu SELÇUKLU-MOĞOL| |GAZNELİ-SELÇUKLU| |Azerbaycan -ermenistan| |nijerya-bangladeş|  |tARİH | |2|';\r\n\r\n    try {\r\n      const completion = await api.chat.completions.create({\r\n        messages: [{ role: 'system', content: soru }, { role: 'user', content: '' }],\r\n        model: 'gpt-3.5-turbo'\r\n      });\r\n\r\n      const aiResponse = completion.choices[0].message.content;\r\n      console.log(`AI: ${aiResponse}`);\r\n      const veriler = aiResponse.split('|');\r\n\r\n      const a = veriler[1];\r\n      const dogru_cevap = veriler[3];\r\n      const yanlis_cevap_1 = veriler[5];\r\n      const yanlis_cevap_2 = veriler[7];\r\n      const yanlis_cevap_3 = veriler[9];\r\n      const tur = veriler[11];\r\n      const zorlukSeviyesi = veriler[13];\r\n\r\n      console.log(a);\r\n      console.log(dogru_cevap);\r\n      console.log(yanlis_cevap_1);\r\n      console.log(yanlis_cevap_2);\r\n      console.log(yanlis_cevap_3);\r\n      console.log(tur);\r\n      console.log(zorlukSeviyesi);\r\n\r\n      setGeneratedQuestion(aiResponse);\r\n\r\n      setQuestionData({\r\n        soru: a,\r\n        dogru_cevap: dogru_cevap,\r\n        yanlis_cevap1: yanlis_cevap_1,\r\n        yanlis_cevap2: yanlis_cevap_2,\r\n        yanlis_cevap3: yanlis_cevap_3,\r\n        tur: tur,\r\n        zorluk_seviyesi: zorlukSeviyesi,\r\n      });\r\n    } catch (error) {\r\n      console.error('Hata oluştu:', error);\r\n      return ''; // Hata durumunda boş bir yanıt döndür\r\n    }\r\n  };\r\n\r\n  const handleNewQuestion = async () => {\r\n    await createAndSendQuestion();\r\n  };\r\n\r\n  const handleUpdateQuestion = async () => {\r\n    // Veritabanına güncelleme işlemini burada ekleyebilirsiniz\r\n    // questionData değişkeni güncel verileri içeriyor\r\n  };\r\n\r\n  useEffect(() => {\r\n    createAndSendQuestion();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Soru Oluşturma Uygulaması</h1>\r\n      <button onClick={handleNewQuestion}>Yeni Soru Oluştur</button>\r\n      <button onClick={handleUpdateQuestion}>Soruyu Güncelle</button>\r\n      {generatedQuestion && (\r\n        <div>\r\n          <h2>Oluşturulan Soru:</h2>\r\n          <p>{generatedQuestion}</p>\r\n          <p>{questionData.tur}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}